#!/bin/bash
set -e

# Check for root privileges
if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

# Install dependencies
apt-get update
apt-get install -y ca-certificates curl gnupg-agent software-properties-common wget

# Add Docker's official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# Add Docker repository to Apt sources
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker packages
apt-get update
apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose

# Verify Docker engine installation
docker run hello-world

# Download Docker Desktop
wget https://desktop.docker.com/linux/main/amd64/137060/docker-desktop-4.27.2-amd64.deb

# Install Genome Terminal for non-Gnome desktop environments
apt install -y gnome-terminal

# Install Docker Desktop
apt-get update
apt-get install -y ./docker-desktop-4.27.2-amd64.deb

# Post-installation steps
# Set capabilities on Docker Desktop binary
setcap cap_net_bind_service=+ep /usr/bin/docker

# Add DNS name for Kubernetes
echo "127.0.0.1 kubernetes.docker.internal" >> /etc/hosts

# Create symlink for Docker CLI
# ln -s /usr/local/bin/com.docker.cli /usr/bin/docker

# Verify Docker Desktop installation
docker --version
docker-compose --version

# Cleanup
rm -rf docker-desktop-4.27.2-amd64.deb

